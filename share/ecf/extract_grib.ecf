%include <%SUB_H%>
%include <head.h>

%manual
extract_grib.ecf 

REFERENCE:
    https://uwcwgltest.dmi.dk/iecd/extractGrib

DESCRIPTION:
    A wrapper for the extracGrib script

1ST LINE:
    Instructions for "1st line" operators.

    extractGrib log is to be found in 
        %ARCHIVE_ROOT%/archive/extractGribFiles/$MBRPATH/log/extractGrib_control_$STEP.log
    or 
        %ARCHIVE_ROOT%/archive/extractGribFiles/$MBRPATH/log/extractGrib_standing_$STEP.log

    Run the command: 

        egrep 'INFILE|OUTFILE|pppkey%shortname|Read namelist number|Created new grib file|Loop' <LOGFILE>

    to produce a list of expected (OUTFILE) vs written (Created new grib file) output files.  

    A problem will result in an early halt of the output.  Identify the offending OUTFILE:
      This will be the last line of output or else will not have been output and the last line 
      of output will be "Read namelist number   nn".  This may be used to identify the OUTFILE.

    "griblist" files are to be found in $PERM/metapp/extractGribConfig/share/griblists/ .  
    The suffix of OUTFILE will contain 'CONTROL' for control.list, 'USER' for user.list .  Otherwise
    use standing.list.  The remainder of the suffix will identify the offending line in the griblist file.
    Comment this out and re-submit.

    A successful run will contain a set of 'Loop_nn' entries at the end of the <LOGFILE>.
    

2ND LINE:
    Instructions for "2nd line" on-call team.

%end
set -x
# load the extractGrib module
module use /home/ms/ie/duuw/privatemodules/
echo $MODULEPATH
#module load use.own
module load extractGrib

# extractGrib expects DOMAIN, EXP, ENSMBR, STEP, FCSTPATH and WORKPATH
export DOMAIN=%DOMAIN%
export EXP=%EXP%

# Ensemble member
export ENSMBR=%ENSMBR%
extgrib_flags="-m"
MBRPATH=mbr$ENSMBR

# Adjust ENSMBR and MBRPATH if running in deterministic mode
if [ "$ENSMBR" == "det" ]
then
    extgrib_flags=""
    MBRPATH=.
    export ENSMBR="000"
fi

export FCSTPATH=%ARCHIVE_ROOT%/$YY/$MM/$DD/$HH/$MBRPATH

export DTG=%YMD%%HH%
export WORKPATH=%ARCHIVE_ROOT%/archive/extractGribFiles

# loop over steps for this worker
# This loop iterates over step n, n+$EXTRGRIB_WORKERS, n+(2 x $EXTRGRIB_WORKERS),  n+(3 x $EXTRGRIB_WORKERS), etc
for STEP in $(seq %worker% $EXTRGRIB_WORKERS %MAX_LL% ); do

  # Extend the waitfor() timeout (seconds) for extractGrib
  WAITIMEOUT=$((180 * $STEP))
  export WAITIMEOUT=$(($WAITIMEOUT + 180))
  export STEP

  extractGrib ${extgrib_flags} || exit 1

done

%include <tail.h>

%comment
$Id$
%end

